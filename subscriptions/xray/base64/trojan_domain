#profile-title: base64:UFNHIHwgVFJPSkFOIERPTUFJTg==
#profile-update-interval: 1
#subscription-userinfo: upload=0; download=0; total=10737418240000000; expire=2546249531
#support-url: https://t.me/yebekhe
#profile-web-page-url: https://github.com/itsyebekhe/PSG
trojan://e1c12e6f-a555-4ff8-b071-1e09dd5d91e6@t3.teslacdn2.live:443?security=tls&headerType=none&type=tcp&sni=t3.teslacdn2.live#❔ XX | 🟢 | trojan | @fati_ffx | 1
trojan://9yu6m5okr@production.tj.ojan.workers.dev:443?path=/&security=tls&host=production.tj.ojan.workers.dev&type=ws&sni=production.tj.ojan.workers.dev#🇺🇸 US | 🟢 | trojan | @ip_cf_config | 11
trojan://maradona_vpn@maradona_vpn.history-paint.art:443?security=tls&sni=teo.history-paint.art&alpn=http/1.1&fp=chrome&type=ws&host=teo.history-paint.art&path=/wss24142?ed=2048#❔ XX | 🟢 | trojan | @maradona_vpn | 4
trojan://maradona_vpn@maradona_vpn14.history-paint.art:443?path=/wss24142?ed=2048&security=tls&alpn=http/1.1&host=teo.history-paint.art&fp=chrome&type=ws&sni=teo.history-paint.art#❔ XX | 🟢 | trojan | @maradona_vpn | 6
trojan://maradona_vpn@maradona_vpn10.history-paint.art:443?path=/wss24142?ed=2048&security=tls&alpn=http/1.1&host=teo.history-paint.art&fp=chrome&type=ws&sni=teo.history-paint.art#❔ XX | 🟢 | trojan | @maradona_vpn | 7
trojan://Maradona_vpn@maradona_vpn.history-paint.art:443?security=tls&sni=teo.history-paint.art&alpn=h2&fp=chrome&type=grpc&serviceName=grpc20337&mode=multi#❔ XX | 🟢 | trojan | @maradona_vpn | 8